{"ast":null,"code":"var _jsxFileName = \"E:\\\\user_access_management\\\\client\\\\src\\\\components\\\\utils\\\\ProtectedRoute.tsx\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { getToken } from './auth';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  const token = getToken();\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","getToken","jsxDEV","_jsxDEV","Fragment","_Fragment","ProtectedRoute","children","token","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/user_access_management/client/src/components/utils/ProtectedRoute.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { getToken } from './auth';\r\n\r\nconst ProtectedRoute = ({ children }: { children: React.ReactNode }) => {\r\n  const token = getToken();\r\n  if (!token) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,QAAQ,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAwC,CAAC,KAAK;EACtE,MAAMC,KAAK,GAAGP,QAAQ,CAAC,CAAC;EACxB,IAAI,CAACO,KAAK,EAAE;IACV,oBAAOL,OAAA,CAACH,QAAQ;MAACS,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;EACA,oBAAOX,OAAA,CAAAE,SAAA;IAAAE,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACQ,EAAA,GANIT,cAAc;AAQpB,eAAeA,cAAc;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}